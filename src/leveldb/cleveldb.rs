/* automatically generated by rust-bindgen */

use std::libc::*;
pub type Struct_leveldb_t = c_void;
pub type leveldb_t = Struct_leveldb_t;
pub type Struct_leveldb_cache_t = c_void;
pub type leveldb_cache_t = Struct_leveldb_cache_t;
pub type Struct_leveldb_comparator_t = c_void;
pub type leveldb_comparator_t = Struct_leveldb_comparator_t;
pub type Struct_leveldb_env_t = c_void;
pub type leveldb_env_t = Struct_leveldb_env_t;
pub type Struct_leveldb_filelock_t = c_void;
pub type leveldb_filelock_t = Struct_leveldb_filelock_t;
pub type Struct_leveldb_filterpolicy_t = c_void;
pub type leveldb_filterpolicy_t = Struct_leveldb_filterpolicy_t;
pub type Struct_leveldb_iterator_t = c_void;
pub type leveldb_iterator_t = Struct_leveldb_iterator_t;
pub type Struct_leveldb_logger_t = c_void;
pub type leveldb_logger_t = Struct_leveldb_logger_t;
pub type Struct_leveldb_options_t = c_void;
pub type leveldb_options_t = Struct_leveldb_options_t;
pub type Struct_leveldb_randomfile_t = c_void;
pub type leveldb_randomfile_t = Struct_leveldb_randomfile_t;
pub type Struct_leveldb_readoptions_t = c_void;
pub type leveldb_readoptions_t = Struct_leveldb_readoptions_t;
pub type Struct_leveldb_seqfile_t = c_void;
pub type leveldb_seqfile_t = Struct_leveldb_seqfile_t;
pub type Struct_leveldb_snapshot_t = c_void;
pub type leveldb_snapshot_t = Struct_leveldb_snapshot_t;
pub type Struct_leveldb_writablefile_t = c_void;
pub type leveldb_writablefile_t = Struct_leveldb_writablefile_t;
pub type Struct_leveldb_writebatch_t = c_void;
pub type leveldb_writebatch_t = Struct_leveldb_writebatch_t;
pub type Struct_leveldb_writeoptions_t = c_void;
pub type leveldb_writeoptions_t = Struct_leveldb_writeoptions_t;
pub type Enum_Unnamed1 = c_uint;
pub static leveldb_no_compression: c_uint = 0;
pub static leveldb_snappy_compression: c_uint = 1;
#[link(name = "leveldb")]
extern "C" {
    pub fn leveldb_open(options: *leveldb_options_t, name: *c_schar,
                        errptr: *mut *mut c_schar) -> *mut leveldb_t;
    pub fn leveldb_close(db: *mut leveldb_t);
    pub fn leveldb_put(db: *mut leveldb_t, options: *leveldb_writeoptions_t,
                       key: *c_schar, keylen: size_t, val: *c_schar,
                       vallen: size_t, errptr: *mut *mut c_schar);
    pub fn leveldb_delete(db: *mut leveldb_t,
                          options: *leveldb_writeoptions_t, key: *c_schar,
                          keylen: size_t, errptr: *mut *mut c_schar);
    pub fn leveldb_write(db: *mut leveldb_t, options: *leveldb_writeoptions_t,
                         batch: *mut leveldb_writebatch_t,
                         errptr: *mut *mut c_schar);
    pub fn leveldb_get(db: *mut leveldb_t, options: *leveldb_readoptions_t,
                       key: *c_schar, keylen: size_t, vallen: *mut size_t,
                       errptr: *mut *mut c_schar) -> *mut c_schar;
    pub fn leveldb_create_iterator(db: *mut leveldb_t,
                                   options: *leveldb_readoptions_t) ->
     *mut leveldb_iterator_t;
    pub fn leveldb_create_snapshot(db: *mut leveldb_t) -> *leveldb_snapshot_t;
    pub fn leveldb_release_snapshot(db: *mut leveldb_t,
                                    snapshot: *leveldb_snapshot_t);
    pub fn leveldb_property_value(db: *mut leveldb_t, propname: *c_schar) ->
     *mut c_schar;
    pub fn leveldb_approximate_sizes(db: *mut leveldb_t, num_ranges: c_int,
                                     range_start_key: **c_schar,
                                     range_start_key_len: *size_t,
                                     range_limit_key: **c_schar,
                                     range_limit_key_len: *size_t,
                                     sizes: *mut uint64_t);
    pub fn leveldb_compact_range(db: *mut leveldb_t, start_key: *c_schar,
                                 start_key_len: size_t, limit_key: *c_schar,
                                 limit_key_len: size_t);
    pub fn leveldb_destroy_db(options: *leveldb_options_t, name: *c_schar,
                              errptr: *mut *mut c_schar);
    pub fn leveldb_repair_db(options: *leveldb_options_t, name: *c_schar,
                             errptr: *mut *mut c_schar);
    pub fn leveldb_iter_destroy(arg1: *mut leveldb_iterator_t);
    pub fn leveldb_iter_valid(arg1: *leveldb_iterator_t) -> c_uchar;
    pub fn leveldb_iter_seek_to_first(arg1: *mut leveldb_iterator_t);
    pub fn leveldb_iter_seek_to_last(arg1: *mut leveldb_iterator_t);
    pub fn leveldb_iter_seek(arg1: *mut leveldb_iterator_t, k: *c_schar,
                             klen: size_t);
    pub fn leveldb_iter_next(arg1: *mut leveldb_iterator_t);
    pub fn leveldb_iter_prev(arg1: *mut leveldb_iterator_t);
    pub fn leveldb_iter_key(arg1: *leveldb_iterator_t, klen: *mut size_t) ->
     *c_schar;
    pub fn leveldb_iter_value(arg1: *leveldb_iterator_t, vlen: *mut size_t) ->
     *c_schar;
    pub fn leveldb_iter_get_error(arg1: *leveldb_iterator_t,
                                  errptr: *mut *mut c_schar);
    pub fn leveldb_writebatch_create() -> *mut leveldb_writebatch_t;
    pub fn leveldb_writebatch_destroy(arg1: *mut leveldb_writebatch_t);
    pub fn leveldb_writebatch_clear(arg1: *mut leveldb_writebatch_t);
    pub fn leveldb_writebatch_put(arg1: *mut leveldb_writebatch_t,
                                  key: *c_schar, klen: size_t, val: *c_schar,
                                  vlen: size_t);
    pub fn leveldb_writebatch_delete(arg1: *mut leveldb_writebatch_t,
                                     key: *c_schar, klen: size_t);
    pub fn leveldb_writebatch_iterate(arg1: *mut leveldb_writebatch_t,
                                      state: *mut c_void,
                                      put:
                                          extern "C" fn
                                              (arg1: *mut c_void,
                                               arg2: *c_schar, arg3: size_t,
                                               arg4: *c_schar, arg5: size_t),
                                      deleted:
                                          extern "C" fn
                                              (arg1: *mut c_void,
                                               arg2: *c_schar, arg3: size_t));
    pub fn leveldb_options_create() -> *mut leveldb_options_t;
    pub fn leveldb_options_destroy(arg1: *mut leveldb_options_t);
    pub fn leveldb_options_set_comparator(arg1: *mut leveldb_options_t,
                                          arg2: *mut leveldb_comparator_t);
    pub fn leveldb_options_set_filter_policy(arg1: *mut leveldb_options_t,
                                             arg2:
                                                 *mut leveldb_filterpolicy_t);
    pub fn leveldb_options_set_create_if_missing(arg1: *mut leveldb_options_t,
                                                 arg2: c_uchar);
    pub fn leveldb_options_set_error_if_exists(arg1: *mut leveldb_options_t,
                                               arg2: c_uchar);
    pub fn leveldb_options_set_paranoid_checks(arg1: *mut leveldb_options_t,
                                               arg2: c_uchar);
    pub fn leveldb_options_set_env(arg1: *mut leveldb_options_t,
                                   arg2: *mut leveldb_env_t);
    pub fn leveldb_options_set_info_log(arg1: *mut leveldb_options_t,
                                        arg2: *mut leveldb_logger_t);
    pub fn leveldb_options_set_write_buffer_size(arg1: *mut leveldb_options_t,
                                                 arg2: size_t);
    pub fn leveldb_options_set_max_open_files(arg1: *mut leveldb_options_t,
                                              arg2: c_int);
    pub fn leveldb_options_set_cache(arg1: *mut leveldb_options_t,
                                     arg2: *mut leveldb_cache_t);
    pub fn leveldb_options_set_block_size(arg1: *mut leveldb_options_t,
                                          arg2: size_t);
    pub fn leveldb_options_set_block_restart_interval(arg1:
                                                          *mut leveldb_options_t,
                                                      arg2: c_int);
    pub fn leveldb_options_set_compression(arg1: *mut leveldb_options_t,
                                           arg2: c_int);
    pub fn leveldb_comparator_create(state: *mut c_void,
                                     destructor:
                                         extern "C" fn(arg1: *mut c_void),
                                     compare:
                                         extern "C" fn
                                             (arg1: *mut c_void,
                                              arg2: *c_schar, arg3: size_t,
                                              arg4: *c_schar, arg5: size_t)
                                             -> c_int,
                                     name:
                                         extern "C" fn(arg1: *mut c_void)
                                             -> *c_schar) ->
     *mut leveldb_comparator_t;
    pub fn leveldb_comparator_destroy(arg1: *mut leveldb_comparator_t);
    pub fn leveldb_filterpolicy_create(state: *mut c_void,
                                       destructor:
                                           extern "C" fn(arg1: *mut c_void),
                                       create_filter:
                                           extern "C" fn
                                               (arg1: *mut c_void,
                                                arg2: **c_schar,
                                                arg3: *size_t, arg4: c_int,
                                                arg5: *mut size_t)
                                               -> *mut c_schar,
                                       key_may_match:
                                           extern "C" fn
                                               (arg1: *mut c_void,
                                                arg2: *c_schar, arg3: size_t,
                                                arg4: *c_schar, arg5: size_t)
                                               -> c_uchar,
                                       name:
                                           extern "C" fn(arg1: *mut c_void)
                                               -> *c_schar) ->
     *mut leveldb_filterpolicy_t;
    pub fn leveldb_filterpolicy_destroy(arg1: *mut leveldb_filterpolicy_t);
    pub fn leveldb_filterpolicy_create_bloom(bits_per_key: c_int) ->
     *mut leveldb_filterpolicy_t;
    pub fn leveldb_readoptions_create() -> *mut leveldb_readoptions_t;
    pub fn leveldb_readoptions_destroy(arg1: *mut leveldb_readoptions_t);
    pub fn leveldb_readoptions_set_verify_checksums(arg1:
                                                        *mut leveldb_readoptions_t,
                                                    arg2: c_uchar);
    pub fn leveldb_readoptions_set_fill_cache(arg1:
                                                  *mut leveldb_readoptions_t,
                                              arg2: c_uchar);
    pub fn leveldb_readoptions_set_snapshot(arg1: *mut leveldb_readoptions_t,
                                            arg2: *leveldb_snapshot_t);
    pub fn leveldb_writeoptions_create() -> *mut leveldb_writeoptions_t;
    pub fn leveldb_writeoptions_destroy(arg1: *mut leveldb_writeoptions_t);
    pub fn leveldb_writeoptions_set_sync(arg1: *mut leveldb_writeoptions_t,
                                         arg2: c_uchar);
    pub fn leveldb_cache_create_lru(capacity: size_t) -> *mut leveldb_cache_t;
    pub fn leveldb_cache_destroy(cache: *mut leveldb_cache_t);
    pub fn leveldb_create_default_env() -> *mut leveldb_env_t;
    pub fn leveldb_env_destroy(arg1: *mut leveldb_env_t);
    pub fn leveldb_free(ptr: *mut c_void);
    pub fn leveldb_major_version() -> c_int;
    pub fn leveldb_minor_version() -> c_int;
}
